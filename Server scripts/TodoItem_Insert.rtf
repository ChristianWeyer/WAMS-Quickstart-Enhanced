{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 function insert(item, user, request) \{\
    item.userName = "<unknown>"; // default\
    item.userId = user.userId;\
    \
    var identities = user.getIdentities();\
    var url;\
\
    if (identities.google) \{\
        var googleAccessToken = identities.google.accessToken;\
        url = 'https://www.googleapis.com/oauth2/v1/userinfo?access_token=' + googleAccessToken;\
    \} else if (identities.facebook) \{\
        var fbAccessToken = identities.facebook.accessToken;\
        url = 'https://graph.facebook.com/me?access_token=' + fbAccessToken;\
    \} else if (identities.microsoft) \{\
        var liveAccessToken = identities.microsoft.accessToken;\
        url = 'https://apis.live.net/v5.0/me/?method=GET&access_token=' + liveAccessToken;\
    \} else if (identities.twitter) \{\
        var userId = user.userId;\
        var twitterId = userId.substring(userId.indexOf(':') + 1);\
        url = 'https://api.twitter.com/users/' + twitterId;\
    \}\
 \
    if (url) \{\
        var requestCallback = function (err, resp, body) \{\
            if (err || resp.statusCode !== 200) \{\
                console.error('Error sending data to the provider: ', err);\
                request.respond(statusCodes.INTERNAL_SERVER_ERROR, body);\
            \} else \{\
                try \{\
                    var userData = JSON.parse(body);\
                    item.userName = userData.name;\
                    request.execute();\
                    sendNotifications();\
                \} catch (ex) \{\
                    console.error('Error parsing response from the provider API: ', ex);\
                    request.respond(statusCodes.INTERNAL_SERVER_ERROR, ex);\
                \}\
            \}\
        \}\
        var req = require('request');\
        var reqOptions = \{\
            uri: url,\
            headers: \{ Accept: "application/json" \}\
        \};\
        req(reqOptions, requestCallback);\
    \} else \{\
        // Insert with default user name: REALLY?\
        request.execute();\
        sendNotifications();\
    \}\
\
    function sendNotifications() \{\
        var devicesTable = tables.getTable('Devices');\
          \
        devicesTable.read(\{\
            success: function(devices) \{\
                console.log(JSON.stringify(devices));\
                setTimeout(function() \{\
                    devices.forEach(function(device) \{\
                        push.apns.send(device.deviceToken, \{\
                            alert: item.text,\
                            payload: \{\
                                inAppMessage: "New item arrived: '" + item.text + "'"\
                            \}\
                        \});\
                    \});\
                \}, 2500);\
            \}\
        \});\
    \}\
\}\
}